{"version":3,"sources":["components/CountryCard.js","CountryFetch.js","CountryInfo.js","components/Header.js","app.js","index.js"],"names":["CountryCard","country","flag","name","population","region","capital","className","to","src","alt","CountryFetch","useState","countries","setCountries","query","setQuery","setRegion","urlSearch","fetchCountry","a","fetch","response","json","console","log","fetchSearchCountry","event","preventDefault","useEffect","updateCountries","filter","toLowerCase","includes","toLocaleLowerCase","onSubmit","placeholder","value","onChange","target","map","numericCode","CountryInfo","setCountry","useParams","urlName","countryInfoFetch","nativeName","subregion","topLevelDomain","currencies","languages","borders","border","DARK_CLASS","Header","systemPrefersDark","useMediaQuery","undefined","prefersDark","setIsDark","isDark","document","documentElement","classList","add","remove","type","checked","onClick","App","exact","path","children","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ee60c3a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CountryCard({\r\n  country: { flag, name, population, region, capital },\r\n}) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      {\" \"}\r\n      <Link to={`/countries/${name}`} className=\"link\">\r\n        <img className=\"flag\" src={flag} alt={name}></img>\r\n        <div className=\"country-info\">\r\n          <h3 className=\"name\">{name}</h3>\r\n          <ul>\r\n            <li>\r\n              <span className=\"bold\">Population:</span> {population}\r\n            </li>\r\n            <li>\r\n              <span className=\"bold\">Region: </span>\r\n              {region}\r\n            </li>\r\n            <li>\r\n              <span className=\"bold\">Capital: </span>\r\n              {capital}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CountryCard from \"./components/CountryCard\";\r\nimport \"./components/CountryCard.css\";\r\n\r\nexport default function CountryFetch() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const url = `https://restcountries.eu/rest/v2/all`;\r\n  const urlSearch = `https://restcountries.eu/rest/v2/name/${query}`;\r\n\r\n  const fetchCountry = async () => {\r\n    const response = await fetch(url);\r\n    const countries = await response.json();\r\n    setCountries(countries);\r\n    console.log(countries);\r\n  };\r\n\r\n  const fetchSearchCountry = async (event) => {\r\n    event.preventDefault();\r\n    const response = await fetch(urlSearch);\r\n    const countries = await response.json();\r\n    setCountries(countries);\r\n    console.log(countries);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n  const handleSelect = (event) => {\r\n    setRegion(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCountry();\r\n  }, []);\r\n\r\n  const updateCountries = countries.filter(\r\n    (country) =>\r\n      country.name.toLowerCase().includes(query) &&\r\n      country.region.toLowerCase().includes(region.toLocaleLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={fetchSearchCountry}>\r\n        <div className=\"input-container\">\r\n          <input\r\n            className=\"search-bar\"\r\n            placeholder=\"Search for a country...\"\r\n            value={query}\r\n            onChange={handleChange}\r\n          />\r\n          <i className=\"fas fa-search search-image\"></i>\r\n        </div>\r\n        <select value={region} onChange={handleSelect}>\r\n          <option value=\"\">Filter by Region</option>\r\n          <option value=\"Africa\">Africa</option>\r\n          <option value=\"America\">America</option>\r\n          <option value=\"Asia\">Asia</option>\r\n          <option value=\"Europe\">Europe</option>\r\n          <option value=\"Oceania\">Oceania</option>\r\n        </select>\r\n      </form>\r\n      <div className=\"countries-container\">\r\n        {updateCountries.map((country) => {\r\n          const { numericCode } = country;\r\n          return (\r\n            <div key={numericCode}>\r\n              <CountryCard country={country} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport \"./CountryInfo.css\";\r\n\r\nexport default function CountryInfo() {\r\n  const [country, setCountry] = useState([]);\r\n  const { name } = useParams();\r\n  const urlName = `https://restcountries.eu/rest/v2/name/${name}`;\r\n\r\n  const countryInfoFetch = async () => {\r\n    const response = await fetch(urlName);\r\n    const countries = await response.json();\r\n    setCountry(countries);\r\n    console.log(countries);\r\n  };\r\n\r\n  useEffect(() => {\r\n    countryInfoFetch();\r\n  }, [name]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"back-btn\">\r\n          <i className=\"fas fa-arrow-left\"></i> Back\r\n        </Link>\r\n        {country.map((country) => {\r\n          const {\r\n            numericCode,\r\n            flag,\r\n            name,\r\n            nativeName,\r\n            population,\r\n            region,\r\n            subregion,\r\n            capital,\r\n            topLevelDomain,\r\n            currencies,\r\n            languages,\r\n            borders,\r\n          } = country;\r\n\r\n          return (\r\n            <div key={numericCode}>\r\n              <div className=\"country-info-container\">\r\n                <div className=\"country-info-flag\">\r\n                  <img src={flag} alt={name} />\r\n                </div>\r\n                <div className=\"details-container\">\r\n                  <h2>{name}</h2>\r\n                  <div className=\"list-container\">\r\n                    <ul>\r\n                      <li>\r\n                        <span className=\"bold\">Native Name: </span>\r\n                        {nativeName}\r\n                      </li>\r\n                      <li>\r\n                        <span className=\"bold\">Population:</span> {population}\r\n                      </li>\r\n                      <li>\r\n                        <span className=\"bold\">Region:</span> {region}\r\n                      </li>\r\n                      <li>\r\n                        <span className=\"bold\">Sub Region:</span> {subregion}\r\n                      </li>\r\n                      <li>\r\n                        <span className=\"bold\">Capital:</span> {capital}\r\n                      </li>\r\n\r\n                      <li>\r\n                        <span className=\"bold\">Top Level Domain:</span>{\" \"}\r\n                        {topLevelDomain}\r\n                      </li>\r\n                      <li>\r\n                        <span className=\"bold\">Currencies:</span>{\" \"}\r\n                        {currencies[0].name}\r\n                      </li>\r\n                      <li>\r\n                        <span className=\"bold\">Languages:</span>{\" \"}\r\n                        {languages[0].name}\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div>\r\n                    <h3>Border Countries: </h3>\r\n                    <div className=\"border-countries-container\">\r\n                      {borders.map((border) => {\r\n                        return (\r\n                          <ul key={border}>\r\n                            <li className=\"border-countries\">{border}</li>\r\n                          </ul>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport \"./Header.css\";\r\nimport \"./CountryCard.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DARK_CLASS = \"dark\";\r\n\r\nexport default function Header() {\r\n  const systemPrefersDark = useMediaQuery(\r\n    {\r\n      query: \"(prefers-color-scheme: dark)\",\r\n    },\r\n    undefined,\r\n    (prefersDark) => {\r\n      setIsDark(prefersDark);\r\n    }\r\n  );\r\n\r\n  const [isDark, setIsDark] = useState(systemPrefersDark);\r\n\r\n  useEffect(() => {\r\n    if (isDark) {\r\n      document.documentElement.classList.add(DARK_CLASS);\r\n    } else {\r\n      document.documentElement.classList.remove(DARK_CLASS);\r\n    }\r\n  }, [isDark]);\r\n\r\n  const handleToggle = (event) => {\r\n    setIsDark(event.target.checked);\r\n  };\r\n  return (\r\n    <div className=\"header-container\">\r\n      <Link to=\"/\" className=\"app-title\">\r\n        <h1>Where in the world?</h1>\r\n      </Link>\r\n      <div className=\"dark-mode-container\">\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" checked={isDark} onClick={handleToggle} />\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport CountryFetch from \"./CountryFetch\";\r\nimport CountryInfo from \"./CountryInfo\";\r\nimport Header from \"./components/Header\";\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Header />\r\n        <Route exact path=\"/\">\r\n          <CountryFetch />\r\n        </Route>\r\n        <Route path=\"/countries/:name\" children={<CountryInfo />}></Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}